<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Curiosity Kills Boredom</title>
    <link>https://devblog/</link>
    <description>Recent content on Curiosity Kills Boredom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Nov 2023 18:35:02 +0000</lastBuildDate>
    <atom:link href="https://devblog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hacking a Java Game in OSX</title>
      <link>https://devblog/post/javagamehack/</link>
      <pubDate>Tue, 07 Nov 2023 18:35:02 +0000</pubDate>
      <guid>https://devblog/post/javagamehack/</guid>
      <description>Hi!
Recently I adquired a Macbook, so my interest in memory manipulation in OSX obviouvsly spiked.
Today I will try to hack a game, not any game, but a game that was made by me in Java. This doesn&amp;rsquo;t mean we will use Java for memory manipulation, we will use the superior language obviously. Do i need to say it? Yes, it&amp;rsquo;s C++.
As a wise man once said, Java is Build once, run everywhere, C++ is build once debug everywhere.</description>
    </item>
    <item>
      <title>Process memory manipulation in OSX</title>
      <link>https://devblog/post/osxmemorymanipulation/</link>
      <pubDate>Sun, 05 Nov 2023 12:09:57 +0000</pubDate>
      <guid>https://devblog/post/osxmemorymanipulation/</guid>
      <description>Cool cat for inspiration :) So&amp;hellip; here we go!
So the objective is to read memory from a process and then modify it. Pretty simple right? I will use C++ for this because it offers many of the low level capabilities that we will need to do this but I am sure you can use your preffered language too.
Well&amp;hellip; if we want to read memory from a process then we need to have a process running!</description>
    </item>
  </channel>
</rss>
